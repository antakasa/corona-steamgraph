{"version":3,"sources":["utils/categories.js","components/Annotation.js","utils/annotations.js","components/Legend.js","components/YAxis.js","components/Dataviz.js","components/Circles.js","utils/dateMethods.js","utils/scales.js","utils/calculations.js","utils/initialize.js","utils/layout.js","utils/dataMethods.js","Slides.js","utils/colors.js","components/ScrollyTeller.js","App.js","index.js"],"names":["categories","categorizeGroup","group","indexOf","Annotation","stackedData","xScale","yScale","parseDate","date","annotationText","orientation","parsedData","console","log","processed","map","cat","datedCategoryData","find","e","key","data","getDate","getMonth","getYear","x1","x2","length","createAnnotationData","cx","cy","r","fill","style","stroke","strokeWidth","d","x","y","fontSize","transform","Legend","colors","height","i","width","textAnchor","alignmentBaseline","YAxis","highlight","bigTicks","smallTicks","margin","value","yOffset","strokeDasharray","Dataviz","vizProps","slideData","areas","greyColors","brightColors","annotationProps","id","left","right","top","bottom","data-index","allgrey","highlightedLayers","index","annotations","text","highlightYAxis","CircleContainer","slides","currentStepIndex","className","locale","timeFormatLocale","dateTime","time","periods","days","shortDays","months","shortMonths","timeParse","formatDate","format","formatDateBackToOriginal","formatDateWeek","timeFormat","calculations","baseData","filterDataBasedOnGroups","groups","filter","countSum","arr","reduce","accumulator","obj","parseInt","isNaN","mostInfectionsOnADateByGroups","startDate","endDate","dataGrouped","acc","category","groupByDate","keys","Object","parsed","sum","forEach","push","maxValue","max","calculateByDateAndCategory","dateFiltered","filterDataByDate","categoryAndDateFiltered","under40ShareInPopulation","sample","censusData","under40","onlyGroups","over40","Set","allGroups","total","storeData","getData","initialize","outliers","tickDates","nth","alwaysInclude","window","innerWidth","layout","filteredData","filterByDate","Math","round","data2","annotationDates","element","newDates","stack","offset","stackOffsetSilhouette","stackData","mergedObj","output","prop","rollingAverages","allValuesWithinCategory","avg","rollingAverage","slice","alwaysIncludedValues","everyNth","final","sort","a","b","parseData","allDates","minValue","min","scaleLinear","domain","range","createYScale","firstScaledDate","lastScaledDate","unshift","createTicks","createXScale","area","x0","curve","curveBasis","scaleOrdinal","createGreyColors","ScrollyTeller","setCurrentStepIndex","onStepEnter","direction","_","stepIndex","innerHeight","zIndex","position","dangerouslySetInnerHTML","__html","settings","avgRange","App","useState","setVizProps","storeSlides","useEffect","json","info","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a53eca2.chunk.js","sourcesContent":["//export const categories =  [\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\", \"70-79\", \"80-\"]\nexport const categories =[\"0-19\", \"20-39\", \"40-59\",\"60-79\", \"80-\"]\nexport const categorizeGroup = (group) => {\n    if ([\"00-10\"].indexOf(group) > -1) return categories[0];\n    if ([\"10-20\"].indexOf(group) > -1) return categories[0];\n    if ([\"20-30\"].indexOf(group) > -1) return categories[1];\n    if ([\"30-40\"].indexOf(group) > -1) return categories[1];\n    if ([\"40-50\"].indexOf(group) > -1) return categories[2];\n    if ([\"50-60\"].indexOf(group) > -1) return categories[2];\n    if ([\"60-70\"].indexOf(group) > -1) return categories[3];\n    if ([\"70-80\"].indexOf(group) > -1) return categories[3];\n    if ([\"80-\"].indexOf(group) > -1) return categories[4];\n    if (group === \"Kaikki ikäryhmät\") return group;\n  }","import React from \"react\";\nimport { createAnnotationData } from \"../utils/annotations\";\nexport const Annotation = ({\n    stackedData,\n    xScale,\n    yScale,\n    parseDate,\n    date,\n    categories,\n    annotationText,\n    orientation,\n  }) => {\n    const { x1, x2 } = createAnnotationData({\n      stackedData,\n      parseDate,\n      date,\n      categories,\n    });\n    date = parseDate(date);\n    return (\n      <g>\n        <circle cx={xScale(x1)} cy={yScale(date)} r=\"2\" fill=\"white\" />\n        <circle cx={xScale(x2)} cy={yScale(date)} r=\"2\" fill=\"white \" />\n        <path\n          style={{ stroke: \"white\", strokeWidth: 2, fill: \"none\" }}\n          d={`\n            M${xScale(x1)} ${orientation === \"down\"? yScale(date) + 5 : yScale(date) - 5} \n            L${xScale(x1)} ${\n            orientation === \"down\" ? yScale(date) + 20 : yScale(date) - 20\n          } \n            L${xScale(x2)} ${\n            orientation === \"down\" ? yScale(date) + 20 : yScale(date) - 20\n          }\n            L${xScale(x2)} ${orientation === \"down\" ? yScale(date) + 5 : yScale(date) - 5}\n            `}\n        />\n        <text\n          x={xScale(x1)}\n          y={\n            orientation === \"down\"\n              ? yScale(date) + 20 + 13\n              : yScale(date) - 20 - 10\n          }\n          style={{\n            fontSize: \"13px\",\n            fill: \"white\",\n            transform: \"translateX(0px)\",\n          }}\n        >\n          {annotationText}\n        </text>\n      </g>\n    );\n  };","import { categories } from \"./categories\";\n\nexport const createAnnotationData = ({\n  stackedData,\n  parsedData,\n  parseDate,\n  date,\n  categories,\n}) => {\n  console.log(stackedData)\n  let processed = categories.map((cat) => {\n    const categoryData = stackedData.find((e) => e.key === cat);\n    const datedCategoryData = categoryData.find((e) => {\n      return (\n        e.data.date.getDate() === parseDate(date).getDate() &&\n        e.data.date.getMonth() === parseDate(date).getMonth() &&\n        e.data.date.getYear() === parseDate(date).getYear()\n      );\n    });\n    try {\n      const x1 = datedCategoryData[0];\n      const x2 = datedCategoryData[1];\n\n      return { x1, x2 };\n    } catch {\n      console.log(`cannot find date ${date}`);\n    }\n  });\n  return { x1: processed[0].x1, x2: processed[processed.length - 1].x2 };\n};\n","import React from \"react\"\n\nexport const Legend = ({ data, colors, height }) => {\n    return (\n      <>\n        {data.map((e, i) => {\n          return (\n            <g key={i}>\n              <rect\n                x=\"0\"\n                y={i * 30}\n                width=\"20\"\n                height=\"20\"\n                style={{ fill: colors(e) }}\n              ></rect>\n              <text\n                x=\"24\"\n                y={i*30 +10}\n                textAnchor=\"left\"\n                style={{ alignmentBaseline: \"middle\", fill: colors(e) }}\n              >\n                {e.key}\n              </text>\n            </g>\n          );\n        })}\n      </>\n    );\n  };","export const YAxis = ({highlight, xScale, bigTicks, smallTicks, margin, width, height }) => {\n    return (\n      <>\n        <g>\n          {false && <path d={`M 9.5 0.5 V 620`} stroke=\"currentColor\" />}\n          {false &&\n            smallTicks.map(({ value, yOffset }, i) => (\n              <g key={value} transform={`translate(9.5, ${yOffset})`}>\n                {false && (\n                  <line\n                    x1=\"0\"\n                    stroke-dasharray=\"1\"\n                    x2={30}\n                    stroke=\"currentColor\"\n                  />\n                )}\n                <text\n                  x=\"50\"\n                  key={value}\n                  style={{\n                    fontSize: \"10px\",\n                    textAnchor: \"middle\",\n                    fontWeight: \"bold\",\n                    fill: highlight ? \"red\" : \"white\",\n                    transform: \"translate(-32px, -2px)\",\n                  }}\n                >\n                  {i % 3 === 3 - 1 ? value : \"\"}\n                </text>\n              </g>\n            ))}\n          {bigTicks.map(({ value, yOffset }) => (\n            <g key={value} transform={`translate(9.5, ${yOffset})`}>\n              <line\n                x1={width}\n                strokeWidth=\"0.3\"\n                strokeDasharray=\"2 2\"\n                x2={0}\n                stroke={highlight ? \"goldenrod\" : \"white\"}\n              />\n              <text\n                x=\"40\"\n                key={value}\n                style={{\n                  fontSize: \"13px\",\n                  fill: highlight ? \"goldenrod\" : \"white\",\n                  transform: `translate(${width - 100}px, -6px)`,\n                }}\n              >\n                {value}\n              </text>\n            </g>\n          ))}\n        </g>\n      </>\n    );\n  };","import \"./Dataviz.css\";\nimport React from \"react\";\nimport { Annotation } from \"./Annotation\"\nimport { Legend } from \"./Legend\"\nimport { YAxis } from \"./YAxis\"\nexport const Dataviz = ({ vizProps, slideData }) => {\n  const {\n    margin,\n    width,\n    height,\n    stackedData,\n    xScale,\n    bigTicks,\n    smallTicks,\n    areas,\n    yScale,\n    greyColors,\n    parseDate,\n    brightColors,\n  } = vizProps;\n\n  const annotationProps = { xScale, yScale, stackedData, parseDate };\n  return (\n    <section>\n      <svg\n        id=\"dataviz-container\"\n        style={{\n          width: width + margin.left + margin.right,\n          height: height + margin.top + margin.bottom,\n        }}\n      >\n        <g\n          id=\"container\"\n          style={{\n            transform: \"translate(\" + margin.left + \"px,\" + margin.top + \"px)\",\n          }}\n        >\n          {stackedData.map((e, i) => (\n            <path\n              d={areas(e)}\n              key={e.index}\n              data-index={e.key}\n              style={{\n                fill:\n                  !slideData.allgrey && (!slideData.highlightedLayers || slideData.highlightedLayers.indexOf(e.key) > -1)\n                    ? brightColors(e)\n                    : greyColors(e),\n                stroke: slideData.highlightedLayers && slideData.highlightedLayers.indexOf(e.key) > -1 ? \"none\" : \"none\",\n              }}\n            ></path>\n          ))}\n          {slideData.annotations.map((e, i) => (\n            <Annotation\n              {...annotationProps}\n              date={e.date}\n              key={i}\n              categories={e.categories}\n              annotationText={e.text}\n              orientation={e.orientation}\n            />\n          ))}\n          <YAxis\n          highlight={slideData.highlightYAxis}\n            xScale={xScale}\n            bigTicks={bigTicks}\n            smallTicks={smallTicks}\n            margin={margin}\n            width={width}\n            height={height}\n          />\n          {true && (\n            <Legend data={stackedData} colors={brightColors} height={height} />\n          )}\n        </g>\n      </svg>\n    </section>\n  );\n};\n\n","export const CircleContainer = ({ slides, currentStepIndex }) => (\n  <div id=\"circle-container\">\n    {slides.map((e, i) => (\n      <div\n        id=\"circle\"\n        key={i}\n        className={currentStepIndex >= i ? \"seen\" : \"not-seen\"}\n      ></div>\n    ))}\n  </div>\n);\n","import { formatLocale } from \"d3-format\";\nimport { timeFormat, timeFormatLocale, timeParse } from \"d3-time-format\";\n\nvar locale = timeFormatLocale({\n  dateTime: \"%A, %-d. %Bta %Y klo %X\",\n  date: \"%-d.%-m.%Y\",\n  time: \"%H:%M:%S\",\n  periods: [\"a.m.\", \"p.m.\"],\n  days: [\n    \"sunnuntai\",\n    \"maanantai\",\n    \"tiistai\",\n    \"keskiviikko\",\n    \"torstai\",\n    \"perjantai\",\n    \"lauantai\",\n  ],\n  shortDays: [\"Su\", \"Ma\", \"Ti\", \"Ke\", \"To\", \"Pe\", \"La\"],\n  months: [\n    \"tammikuu\",\n    \"helmikuu\",\n    \"maaliskuu\",\n    \"huhtikuu\",\n    \"toukokuu\",\n    \"kesäkuu\",\n    \"heinäkuu\",\n    \"elokuu\",\n    \"syyskuu\",\n    \"lokakuu\",\n    \"marraskuu\",\n    \"joulukuu\",\n  ],\n  shortMonths: [\n    \"Tammi\",\n    \"Helmi\",\n    \"Maalis\",\n    \"Huhti\",\n    \"Touko\",\n    \"Kesä\",\n    \"Heinä\",\n    \"Elo\",\n    \"Syys\",\n    \"Loka\",\n    \"Marras\",\n    \"Joulu\",\n  ],\n});\n\nexport const parseDate = timeParse(\"%d.%m.%Y\"); // Date stored in data in form 1.5.2020\nexport const formatDate = locale.format(\"%B\");\nexport const formatDateBackToOriginal = locale.format(\"%-d.%-m.%Y\");\nexport const formatDateWeek = timeFormat(\"vko %V\");\n","import { max, min } from \"d3-array\";\nimport { scaleLinear } from \"d3-scale\";\nimport { timeMonth } from \"d3-time\";\n\nexport const createYScale = ({allDates, data, width, height, parseDate, formatDate, margin}) => {\n    const minValue = min(allDates)\n    const maxValue  = max(allDates)\n    return scaleLinear().domain([minValue,maxValue]).range([0, height]);\n \n  }\nfunction getNumberOfWeek(date) {\n    const firstDayOfYear = new Date(date.getFullYear(), 0, 1);\n    const pastDaysOfYear = (date - firstDayOfYear) / 86400000;\n    return Math.ceil((pastDaysOfYear + firstDayOfYear.getDay() + 1) / 7);\n}\n\n\nexport const createTicks = ({allDates,formatDateWeek, tickDates, parseDate, formatDate, yScale, firstScaledDate, lastScaledDate}) => {\n  let parsed = tickDates.map(e => parseDate(e))\n    parsed.unshift(allDates[0])\n    const bigTicks = parsed.map((value) => {\n      return ({\n      value: formatDate(value),\n      yOffset: yScale(value),\n    })});\n    const smallTicks = allDates.map((value) => {\n      return ({\n      value: formatDateWeek(value),\n      yOffset: yScale(value),\n    })}); \n    return { bigTicks, smallTicks} \n}\n\nexport const createXScale = (width, data) => {\n  const minValue = min(data, d => min(d, d=> d[0]))\n  const maxValue = max(data, d => max(d, d=> d[1]))\n  return scaleLinear().domain([minValue, maxValue]).range([50, width - 50 ])\n}","import { max } from \"d3-array\";\nimport censusData from \"../censusData.json\";\nimport { parseDate } from \"./dateMethods\";\nexport const calculations = (() => {\n  let baseData = {};\n\n  const filterDataByDate = (data, date) => data.filter((e) => e.date === date);\n\n  const filterDataBasedOnGroups = (data, groups) =>\n    data.filter((e) => groups.indexOf(e.group) > -1);\n\n  const groupByDate = (data, startDate, endDate) => {\n    return data.reduce((acc, obj) => {\n      const category = obj.group;\n      if (acc[obj.date]) {\n        acc[obj.date] = {\n          ...acc[obj.date],\n          [category]:\n            (parseInt(acc[obj.date][category], 10) || 0) +\n            (parseInt(obj.value, 10) || 0),\n        };\n      } else {\n        if (\n          !startDate ||\n          !endDate ||\n          (parseDate(obj.date) > parseDate(startDate) &&\n            parseDate(obj.date) < parseDate(endDate))\n        ) {\n          acc[obj.date] = { [category]: obj.value || 0 };\n        }\n      }\n\n      return acc;\n    }, {});\n  };\n\n  const countSum = (arr) => {\n    if (arr.length === 0) return 0;\n    return arr.reduce(function (accumulator, obj) {\n      let value = parseInt(obj.value, 10);\n      if (isNaN(value)) value = 0; //TODO What are the empty values\n      return accumulator + value;\n    }, 0);\n  };\n\n  return {\n    mostInfectionsOnADateByGroups: (categories, startDate, endDate) => {\n      const dataGrouped = groupByDate(baseData, startDate, endDate);\n      const keys = Object.keys(dataGrouped);\n\n      let parsed = [];\n      let comparison = keys.map((key) => {\n        let obj = {};\n        let sum = 0;\n\n        categories.forEach((category) => {\n          obj[category] = isNaN(parseInt(dataGrouped[key][category], 10))\n            ? 0\n            : parseInt(dataGrouped[key][category], 10);\n          sum =\n            sum +\n            (isNaN(parseInt(dataGrouped[key][category], 10))\n              ? 0\n              : parseInt(dataGrouped[key][category], 10));\n        });\n        obj.sum = sum;\n        obj.date = key;\n        parsed.push(obj);\n      });\n      console.log(parsed)\n      const maxValue = max(parsed, (d) => d.sum);\n      const date = parsed.find((e) => e.sum === maxValue);\n      return { maxValue, date };\n    },\n    calculateByDateAndCategory: (date, categories) => {\n      const dateFiltered = filterDataByDate(baseData, date);\n      const categoryAndDateFiltered = filterDataBasedOnGroups(\n        dateFiltered,\n        categories\n      );\n      return countSum(categoryAndDateFiltered);\n    },\n    under40ShareInPopulation: () => {\n      const sample =\n        parseInt(censusData[0][\"0-19\"], 10) +\n        parseInt(censusData[0][\"20-39\"], 10);\n      console.log(sample);\n      const total = parseInt(censusData[0][\"total\"], 10);\n      return (sample / total) * 100;\n    },\n    under40: () => {\n      const onlyGroups = baseData.map((e) => e.group);\n      const uniqueGroups = [...new Set(onlyGroups)];\n\n      // Which % of infections are from people under 40 yrs\n      const over40Groups = [\"40-50\", \"50-60\", \"60-70\", \"70-80\", \"80-\"];\n      const under40Groups = [\"00-10\", \"10-20\", \"20-30\", \"30-40\"];\n      const all = [\"Kaikki ikäryhmät\"];\n      const over40 = filterDataBasedOnGroups(baseData, over40Groups);\n      const under40 = filterDataBasedOnGroups(baseData, under40Groups);\n      const allGroups = filterDataBasedOnGroups(baseData, all);\n      const sanityCheck =\n        [...over40, ...under40, ...allGroups].length === baseData.length;\n\n      if (sanityCheck) {\n        const total = countSum([...over40, ...under40]);\n        const under40Average = (countSum(under40) / total) * 100;\n        return under40Average;\n      }\n    },\n    storeData: (data) => {\n      baseData = data;\n    },\n    getData: () => baseData,\n  };\n})();\n","import { categories, categorizeGroup } from \"./categories.js\";\nimport { createBrightColors, createGreyColors } from \"./colors.js\";\nimport {\n  createAreas,\n  filterByDate,\n  parseData,\n  stackData,\n} from \"./dataMethods.js\";\nimport {\n  formatDate,\n  formatDateBackToOriginal,\n  formatDateWeek,\n  parseDate,\n} from \"./dateMethods.js\";\nimport { layout } from \"./layout.js\";\nimport { createXScale, createYScale, createTicks } from \"./scales.js\";\nimport { calculations } from \"./calculations\";\nimport { generateSlides } from \"../Slides.js\";\n\nexport const initialize = ({\n  data,\n  startDate,\n  endDate,\n  outliers,\n  tickDates,\n  nth,\n  alwaysInclude,\n}) => {\n  const { margin, width, height } = layout();\n  // filterByDate()\n  // Filter data by date:\n  // 1. create a sample of dataset including only the information between start point & end point\n  // 2. exclude outliers – dates that contain strange values\n\n  const filteredData = filterByDate({\n    parseDate,\n    data,\n    startDate,\n    endDate,\n    outliers,\n  });\n\n  // store this data to be used with calculations\n  calculations.storeData(filteredData);\n\n  const slides = generateSlides();\n  let annotationDates = [];\n  slides.forEach(element => {\n    let newDates = element[\"annotations\"].map(e => e.date)\n    annotationDates = [...annotationDates, ...newDates]\n  });\n\n  alwaysInclude = [...alwaysInclude, ...annotationDates]\n\n  // pa3rseData()\n  // Process data into an array of objects where each object holds values of a one particular date.\n  // 1: {date: , catgory2, category3, category4...}\n  // 2. Counts rolling averages\n  // 3. Picks every nth from the data to reduce sample size\n  // 4. Removes outliers and makes sure the 'always included' dates (e.g. those with annotations)\n  // are included in the sample\n  const parsedData = parseData({\n    data: filteredData,\n    parseDate,\n    categories,\n    categorizeGroup,\n    nth,\n    alwaysInclude,\n    formatDateBackToOriginal,\n  });\n\n  const stackedData = stackData(parsedData, categories);\n  const allDates = stackedData[0].map((e) => e.data.date);\n  const yScale = createYScale({\n    data: stackedData,\n    width,\n    height,\n    margin,\n    allDates,\n    parseDate,\n    formatDate,\n  });\n  const { bigTicks, smallTicks } = createTicks({\n    tickDates,\n    formatDate,\n    yScale,\n    parseDate,\n    allDates,\n    formatDateWeek,\n  });\n  const xScale = createXScale(width, stackedData);\n  const areas = createAreas(xScale, yScale);\n  const brightColors = createBrightColors(categories);\n  const greyColors = createGreyColors(categories);\n  return {\n    vizProps: {\n      margin,\n      width,\n      height,\n      stackedData,\n      xScale,\n      bigTicks,\n      smallTicks,\n      areas,\n      yScale,\n      parseDate,\n      brightColors,\n      greyColors,\n    },\n    slides,\n  };\n};\n","export const layout = () => {\n    const margin = { top: 20, right: 10, bottom: 0, left: 10 };\n    const width = (window.innerWidth > 500 ? 500 : window.innerWidth)- margin.left - margin.right;\n    const height = (window.innerWidth > 500 ? 500 : window.innerWidth) - margin.top - margin.bottom;\n    return { margin, width, height };\n}\n","import rollingAverage from \"sma\";\nimport { area, curveBasis, stack, stackOffsetSilhouette } from \"d3-shape\";\nimport censusData from \"../censusData.json\";\n\nconst everyNth = (arr, nth) => arr.filter((e, i) => i % nth === nth - 1);\n\nexport const stackData = (data, keys) => {\n  return stack().offset(stackOffsetSilhouette).keys(keys)(data);\n};\nexport const createAreas = (y, x) =>\n  area()\n    .y(function (d) {\n      return x(d.data.date);\n    })\n    .x0(function (d) {\n      return y(d[0]);\n    })\n    .x1(function (d) {\n      return y(d[1]);\n    })\n    .curve(curveBasis);\n\nexport const filterByDate = ({\n  data,\n  startDate,\n  endDate,\n  parseDate,\n  outliers,\n}) =>\n  data.filter(\n    (e) =>\n      outliers.indexOf(e.date) === -1 &&\n      parseDate(e.date) > parseDate(startDate) &&\n      parseDate(e.date) < parseDate(endDate)\n  );\n\nexport const parseData = ({\n  data,\n  parseDate,\n  categories,\n  categorizeGroup,\n  nth,\n  alwaysInclude,\n  formatDateBackToOriginal,\n}) => {\n  //console.log(data.filter((e) => e.date === \"5.7.2020\"));\n  var mergedObj = data.reduce((acc, obj) => {\n    const category = categorizeGroup(obj.group);\n    //const category = obj.group\n    if (acc[obj.date]) {\n      acc[obj.date] = {\n        ...acc[obj.date],\n        [category]:\n          (parseInt(acc[obj.date][category], 10) || 0) +\n          (parseInt(obj.value, 10) || 0),\n      };\n    } else {\n      acc[obj.date] = { [category]: obj.value || 0 };\n    }\n\n    return acc;\n  }, {});\n\n  // TODO: SANITY CHECK THAT \"KAIKKI IKÄRYHMÄT\" VALUE MATCHES THE SUM OF GROUP VALUES\n\n  let output = [];\n  for (let prop in mergedObj) {\n    output.push({ ...mergedObj[prop], date: parseDate(prop) });\n  }\n  const applyRollingAverage = (() => {\n    //  modify data so that daily values are actually moving average of last 7 days\n    let rollingAverages = {};\n    let range = 7;\n    for (let index = 0; index < categories.length; index++) {\n      let category = categories[index];\n\n      const allValuesWithinCategory = output.map((e) => e[category]);\n\n      const avg = rollingAverage(allValuesWithinCategory, range);\n      rollingAverages[category] = avg;\n    }\n\n    output.map((e, i) => {\n      if (i < 6) {\n        return null;\n      }\n\n      for (let index = 0; index < categories.length; index++) {\n        let category = categories[index];\n        let value = rollingAverages[category][i - 6];\n        value = value === \"NaN\" ? 0 : value;\n        //value = parseInt(value) / censusData[0][category];\n         value = parseInt(value)\n        e[category] = value;\n      }\n    });\n    output = output.slice(6);\n  })();\n\n  const alwaysIncludedValues = output.filter((e) => {\n  return  alwaysInclude.indexOf(formatDateBackToOriginal(e.date)) > -1\n  }\n    );\n  console.log(alwaysInclude)\n  console.log(alwaysIncludedValues)\n  output = everyNth(output, nth);\n  function sortByDateAscending(a, b) {\n    // Dates will be cast to numbers automagically:\n    return a.date - b.date;\n}\n  const final = [...output, ...alwaysIncludedValues]\n  final.sort(sortByDateAscending)\n  return final;\n};\n","import { calculations } from \"./utils/calculations\";\nexport const generateSlides = () => [\n  {\n    annotations: [],\n    text: [\n      \"<b><x-large>KUINKA IKÄ NÄKYY TARTUNTATILASTOISSA?</x-large></b>\",\n    ],\n  },\n  {\n    annotations: [],\n    text: [\n      \"Kuviossa näkyy covid-19-viruksen raportoidut tartunnat viiteen ikäryhmään jaoteltuna.\", \"Tartunnoilla tarkoitetaan rekisteröityjä positiivisia testituloksia.\",\n    ],\n  },\n  {\n    highlightedLayers: [\"20-39\"],\n    annotations: [],\n    text: [\n      \"Yksi alue (väri) edustaa kuviossa yhtä ikäryhmää.\", \"Parhaillaan korostettuna näkyy tartuntamäärässä mitattuna suurin ryhmä eli 20–39-vuotiaat.\",\n    ],\n  },\n  {\n    annotations: [\n      {\n        date: \"10.11.2020\",\n        categories: [\"0-19\"],\n        text: `${calculations.calculateByDateAndCategory(\"10.11.2020\", [\n          \"00-10\",\n          \"10-20\",\n        ])} kpl`,\n        orientation: \"up\",\n      },\n      {\n        date: \"10.11.2020\",\n        categories: [\"20-39\"],\n        text: `${calculations.calculateByDateAndCategory(\"10.11.2020\", [\n          \"20-30\",\n          \"30-40\",\n        ])} kpl`,\n        orientation: \"down\",\n      },\n      {\n        date: \"10.11.2020\",\n        categories: [\"40-59\"],\n        text: `${calculations.calculateByDateAndCategory(\"10.11.2020\", [\n          \"40-50\",\n          \"50-60\",\n        ])} kpl`,\n        orientation: \"up\",\n      },\n      {\n        date: \"10.11.2020\",\n        categories: [\"60-79\"],\n        text: `${calculations.calculateByDateAndCategory(\"10.11.2020\", [\n          \"60-70\",\n          \"70-80\",\n        ])} kpl`,\n        orientation: \"down\",\n      },\n      {\n        date: \"10.11.2020\",\n        categories: [\"80-\"],\n        text: `${calculations.calculateByDateAndCategory(\"10.11.2020\", [\n          \"80-\",\n        ])} kpl`,\n        orientation: \"up\",\n      },\n    ],\n   \n    text: [\n      'Päivittäisen heilunnan tasaamiseksi tartuntoja kuvaavat datapisteet on laskettu kuviossa <a href=\"https://fi.wikipedia.org/wiki/Liukuva_keskiarvo\" target=\"_blank\">liukuviksi keskiarvoiksi</a> seitsemän päivän ajalta. ',\n      \"Teksteissä tartuntojen kappalemäärillä viitataan kuitenkin absoluuttisiin lukuihin.\",\n    ],\n  },\n  {\n    annotations: [],\n    text: [\"Kunkin alueen leveys suhteessa muihin kuvaa tartuntojen lukumäärää.\",\n    \"Mitä leveämpi alue, sitä enemmän tartuntoja.\"],\n  },\n  {\n    highlightedLayers: [\"0-19\", \"20-39\"],\n    annotations: [],\n    text: [\n      `Alle 40-vuotiaiden osuus kaikista varmistetuista tartunnoista on noin ${Math.round(\n        calculations.under40()\n      )} % &#185;.`,\n      `<span style=\"font-size: 12px\">&#185;Ryhmän noin 2,5 miljoonaa jäsentä kattaa ${Math.round(\n        calculations.under40ShareInPopulation()\n      )} % Suomen väestöstä.</font>`,\n    ],\n  },\n  (()=> {\n    const data = calculations.mostInfectionsOnADateByGroups([\"00-10\", \"10-20\", \"20-30\", \"30-40\"])\n    const date = data.date.date \n    const text = [`Suurimmillaan tartuntojen rekisteröinnit olivat ${data.date.date}`]\n    const annotations = [\n      {\n        date,\n        categories: [\"0-19\", \"20-39\"],\n        text: `${data.maxValue} kpl`,\n        orientation: \"up\"\n      }\n    ];\n    return ({\n      highlightedLayers: [\"0-19\", \"20-39\"],\n      text,\n      annotations\n    })\n  })(),\n  (()=> {\n    const data = calculations.mostInfectionsOnADateByGroups([\"40-50\", \"50-60\", \"60-70\", \"70-80\", \"80-\"])\n    const date = data.date.date \n    const text = ['Myös vanhemmilla ikäryhmillä nähtiin samoihin aikoihin huomattavaa kasvua.']\n    console.log(date)\n    const annotations = [\n      {\n        date,\n        categories: [\"40-59\", \"60-79\", \"80-\"],\n        text: `${data.maxValue} kpl`,\n        orientation: \"down\"\n      }\n    ];\n    return ({\n      highlightedLayers: [\"40-59\", \"60-79\", \"80-\"],\n      text,\n      annotations\n    })\n  })(),\n  (()=> {\n    const data = calculations.mostInfectionsOnADateByGroups([\"00-10\", \"10-20\", \"20-30\", \"30-40\"], \"1.8.2020\", \"28.10.2020\")\n    const date = data.date.date \n    const text = [\n      `Keskimäärin eri ikäryhmien muutokset mukailevat melko hyvin toisiaan.`,\n      `Syksyllä alle 40-vuotiaiden ryhmässä nähtiin kuitenkin hieman muita korkeampia lukuja.`]\n    const annotations = [\n    ];\n    return ({\n      highlightedLayers: [\"0-19\", \"20-39\"],\n      text,\n      annotations\n    })\n  })(),\n  (()=> {\n    const data = calculations.mostInfectionsOnADateByGroups([\"00-10\", \"10-20\", \"20-30\", \"30-40\"], \"1.8.2020\", \"28.10.2020\")\n    const data2 = calculations.mostInfectionsOnADateByGroups([\"20-30\"], \"1.8.2020\", \"28.10.2020\")\n    console.log(data2)\n    const date = data.date.date \n    const text = [\n      `Korkeakoulujen alettua rekisteröitiin korkeimmillaan ${data.maxValue} tartuntaa alle 40-vuotialla (${date})`, `Tästä luvusta \n      ${data2.maxValue} rekisteröitiin 20–30-vuotiaiden osaryhmässä.`]\n    const annotations = [\n      {\n        date,\n        categories: [\"0-19\", \"20-39\"],\n        text: `${data.maxValue} kpl`,\n        orientation: \"up\"\n      }\n    ];\n    return ({\n      highlightedLayers: [\"0-19\", \"20-39\"],\n      text,\n      annotations\n    })\n  })(),\n  (()=> {\n    const data = calculations.mostInfectionsOnADateByGroups([\"40-50\", \"50-60\", \"60-70\", \"70-80\", \"80-\"], \"10.10.2020\", \"20.10.2020\")\n    const date = data.date.date \n    const text = [\n      `Kaikilla yli 40-vuotialla rekisteröitiin samoihin aikoihin enimmillään ${data.maxValue} tartuntaa.`]\n    const annotations = [\n      {\n        date,\n        categories: [\"40-59\", \"60-79\", \"80-\"],\n        text: `${data.maxValue} kpl`,\n        orientation: \"up\"\n      }\n    ];\n    return ({\n      highlightedLayers: [\"0-19\", \"20-39\"],\n      text,\n      annotations\n    })\n  })(),\n  {\n    highlightedLayers: [\"0-19\"],\n    annotations: [\n    ],\n    text: [\"Alle 20-vuotiaiden tartuntamäärissäkin näkyi selkeää kasvua syksyn aikana.\",\"Tätä taustaa vasten myös lasten ja nuorten harrastustoimintaan kohdistuneet rajoitustoimet näyttävät perustellummilta.\"],\n  }\n];\n","import { scaleOrdinal } from \"d3-scale\";\n\nexport const createBrightColors = (keys) => {\n    return scaleOrdinal().domain(keys).range([\"#e76f51\", \"#f4a261\", \"#e9c46a\",\"#2a9d8f\", \"#264653\",])\n}\n\nexport const createGreyColors = (keys) => {\n    return scaleOrdinal().domain(keys).range([\"#dcd4d1\",\"#ede2de\",\"#e0cfc5\",\"#cfc0b7\",\"#d1c2c2\"])\n}\n\n\n\n","import React from \"react\";\nimport { Scrollama as ScrollyTell, Step } from \"react-scrollama\";\nexport const ScrollyTeller = ({ slides, setCurrentStepIndex }) => {\n  const onStepEnter = ({ data, direction }) => {\n    const newIndex = direction === \"up\" && data > 0 ? data - 1 : data;\n    setCurrentStepIndex(newIndex);\n  };\n\n  return (\n    <ScrollyTell offset={1} onStepEnter={onStepEnter}>\n      {slides.map((_, stepIndex) => (\n        <Step data={stepIndex} key={stepIndex}>\n          <div\n            style={{\n              margin: \"50vh 0\",\n              top: `-${window.innerHeight}px`,\n              zIndex: 999,\n              position: \"relative\",\n              transform: \"translate3d(0,0,0)\", // Needed for Safari to respect z index with sticky element\n            }}\n          >\n            {_.text.map((e, i) => (\n              <p\n                className=\"text-paragraph\"\n                key={i}\n                dangerouslySetInnerHTML={{ __html: e }}\n              ></p>\n            ))}\n          </div>\n        </Step>\n      ))}\n    </ScrollyTell>\n  );\n};\n","import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { json } from \"d3-fetch\";\nimport { Dataviz } from \"./components/Dataviz\";\nimport { CircleContainer } from \"./components/Circles\";\nimport { initialize } from \"./utils/initialize\";\nimport { ScrollyTeller } from \"./components/ScrollyTeller\";\n\nconst settings = {\n  startDate: \"15.4.2020\",\n  endDate: \"20.1.2021\",\n  avgRange: 7, // how many days are taken into account when counting rolling average\n  nth: 7, // pick every nth value from averaged and date filtered data. This smoothens the curves.\n  outliers: [\"26.11.2020\", \"27.11.2020\"], // dropped from data\n  alwaysInclude: [\"10.12.2020\", \"10.11.2020\", \"15.9.2020\", \"2.8.2020\"],\n  tickDates: [\n    // note that first is added automatically\n    \"1.6.2020\",\n    \"1.7.2020\",\n    \"1.8.2020\",\n    \"1.9.2020\",\n    \"1.10.2020\",\n    \"1.11.2020\",\n    \"1.12.2020\",\n    \"1.1.2021\",\n  ],\n};\n\nconst App = () => {\n  const [data, storeData] = useState(null);\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n  const [vizProps, setVizProps] = useState(null);\n  const [slides, storeSlides] = useState(null);\n\n  useEffect(() => {\n    if (!data) return;\n    const { vizProps, slides } = initialize({ ...settings, data });\n    setVizProps(vizProps);\n    storeSlides(slides);\n  }, [data]);\n\n  useEffect(() => {\n    (async () => {\n      const data = await json(\n        \"https://plus.yle.fi/lambda_sheets/korona/2021-01-korona_ikaryhma/data.json\"\n      );\n      storeData(data.data);\n    })();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {!vizProps || !slides ? (\n        <section>Ladataan...</section>\n      ) : (\n        <>\n          <section\n            id=\"dataviz\"\n            style={{ position: \"sticky\", top: 10, left: 0 }}\n          >\n            <Dataviz\n              vizProps={vizProps}\n              slideData={slides ? slides[currentStepIndex] : null}\n            />\n            <CircleContainer\n              slides={slides}\n              currentStepIndex={currentStepIndex}\n            />\n          </section>\n          <ScrollyTeller\n            setCurrentStepIndex={setCurrentStepIndex}\n            slides={slides}/>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nconsole.info(\"NB! This visualisation does not work well in emualted environments e.g. under developer tools\")\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}