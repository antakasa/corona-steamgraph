[{"/Users/saaantt/Desktop/projektit/plus-ennakko/src/App.js":"1","/Users/saaantt/Desktop/projektit/plus-ennakko/src/utils/dataMethods.js":"2","/Users/saaantt/Desktop/projektit/plus-ennakko/src/utils/calculations.js":"3","/Users/saaantt/Desktop/projektit/plus-ennakko/src/utils/colors.js":"4","/Users/saaantt/Desktop/projektit/plus-ennakko/src/utils/layout.js":"5","/Users/saaantt/Desktop/projektit/plus-ennakko/src/Slides.js":"6","/Users/saaantt/Desktop/projektit/plus-ennakko/src/utils/dateMethods.js":"7","/Users/saaantt/Desktop/projektit/plus-ennakko/src/components/Annotation.js":"8","/Users/saaantt/Desktop/projektit/plus-ennakko/src/components/Legend.js":"9","/Users/saaantt/Desktop/projektit/plus-ennakko/src/components/Circles.js":"10","/Users/saaantt/Desktop/projektit/plus-ennakko/src/components/Dataviz.js":"11","/Users/saaantt/Desktop/projektit/plus-ennakko/src/utils/categories.js":"12","/Users/saaantt/Desktop/projektit/plus-ennakko/src/utils/scales.js":"13","/Users/saaantt/Desktop/projektit/plus-ennakko/src/components/ScrollyTeller.js":"14","/Users/saaantt/Desktop/projektit/plus-ennakko/src/utils/initialize.js":"15","/Users/saaantt/Desktop/projektit/plus-ennakko/src/index.js":"16"},{"size":2225,"mtime":1610996630027,"results":"17","hashOfConfig":"18"},{"size":3057,"mtime":1610992533425,"results":"19","hashOfConfig":"18"},{"size":3774,"mtime":1610992705043,"results":"20","hashOfConfig":"18"},{"size":340,"mtime":1610892968461,"results":"21","hashOfConfig":"18"},{"size":334,"mtime":1610917222543,"results":"22","hashOfConfig":"18"},{"size":5533,"mtime":1610993658548,"results":"23","hashOfConfig":"18"},{"size":1093,"mtime":1610988499632,"results":"24","hashOfConfig":"18"},{"size":1486,"mtime":1610996243525,"results":"25","hashOfConfig":"18"},{"size":671,"mtime":1610996128312,"results":"26","hashOfConfig":"18"},{"size":270,"mtime":1610996289664,"results":"27","hashOfConfig":"18"},{"size":2132,"mtime":1610996723658,"results":"28","hashOfConfig":"18"},{"size":822,"mtime":1610887353026,"results":"29","hashOfConfig":"18"},{"size":1358,"mtime":1610985315408,"results":"30","hashOfConfig":"18"},{"size":988,"mtime":1610996661036,"results":"31","hashOfConfig":"18"},{"size":2801,"mtime":1610986087566,"results":"32","hashOfConfig":"18"},{"size":504,"mtime":1610996785454,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n5h8he",{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/saaantt/Desktop/projektit/plus-ennakko/src/App.js",[],"/Users/saaantt/Desktop/projektit/plus-ennakko/src/utils/dataMethods.js",["70","71","72"],"import rollingAverage from \"sma\";\nimport { area, curveBasis, stack, stackOffsetSilhouette } from \"d3-shape\";\nimport censusData from \"../censusData.json\";\n\nconst everyNth = (arr, nth) => arr.filter((e, i) => i % nth === nth - 1);\n\nexport const stackData = (data, keys) => {\n  return stack().offset(stackOffsetSilhouette).keys(keys)(data);\n};\nexport const createAreas = (y, x) =>\n  area()\n    .y(function (d) {\n      return x(d.data.date);\n    })\n    .x0(function (d) {\n      return y(d[0]);\n    })\n    .x1(function (d) {\n      return y(d[1]);\n    })\n    .curve(curveBasis);\n\nexport const filterByDate = ({\n  data,\n  startDate,\n  endDate,\n  parseDate,\n  outliers,\n}) =>\n  data.filter(\n    (e) =>\n      outliers.indexOf(e.date) === -1 &&\n      parseDate(e.date) > parseDate(startDate) &&\n      parseDate(e.date) < parseDate(endDate)\n  );\n\nexport const parseData = ({\n  data,\n  parseDate,\n  categories,\n  categorizeGroup,\n  nth,\n  alwaysInclude,\n  formatDateBackToOriginal,\n}) => {\n  //console.log(data.filter((e) => e.date === \"5.7.2020\"));\n  var mergedObj = data.reduce((acc, obj) => {\n    const category = categorizeGroup(obj.group);\n    //const category = obj.group\n    if (acc[obj.date]) {\n      acc[obj.date] = {\n        ...acc[obj.date],\n        [category]:\n          (parseInt(acc[obj.date][category], 10) || 0) +\n          (parseInt(obj.value, 10) || 0),\n      };\n    } else {\n      acc[obj.date] = { [category]: obj.value || 0 };\n    }\n\n    return acc;\n  }, {});\n\n  // TODO: SANITY CHECK THAT \"KAIKKI IKÄRYHMÄT\" VALUE MATCHES THE SUM OF GROUP VALUES\n\n  let output = [];\n  for (let prop in mergedObj) {\n    output.push({ ...mergedObj[prop], date: parseDate(prop) });\n  }\n  const applyRollingAverage = (() => {\n    //  modify data so that daily values are actually moving average of last 7 days\n    let rollingAverages = {};\n    let range = 7;\n    for (let index = 0; index < categories.length; index++) {\n      let category = categories[index];\n\n      const allValuesWithinCategory = output.map((e) => e[category]);\n\n      const avg = rollingAverage(allValuesWithinCategory, range);\n      rollingAverages[category] = avg;\n    }\n\n    output.map((e, i) => {\n      if (i < 6) {\n        return null;\n      }\n\n      for (let index = 0; index < categories.length; index++) {\n        let category = categories[index];\n        let value = rollingAverages[category][i - 6];\n        value = value === \"NaN\" ? 0 : value;\n        //value = parseInt(value) / censusData[0][category];\n         value = parseInt(value)\n        e[category] = value;\n      }\n    });\n    output = output.slice(6);\n  })();\n\n  const alwaysIncludedValues = output.filter((e) => {\n  return  alwaysInclude.indexOf(formatDateBackToOriginal(e.date)) > -1\n  }\n    );\n  console.log(alwaysInclude)\n  console.log(alwaysIncludedValues)\n  output = everyNth(output, nth);\n  function sortByDateAscending(a, b) {\n    // Dates will be cast to numbers automagically:\n    return a.date - b.date;\n}\n  const final = [...output, ...alwaysIncludedValues]\n  final.sort(sortByDateAscending)\n  return final;\n};\n",["73","74"],"/Users/saaantt/Desktop/projektit/plus-ennakko/src/utils/calculations.js",["75","76","77"],"/Users/saaantt/Desktop/projektit/plus-ennakko/src/utils/colors.js",[],"/Users/saaantt/Desktop/projektit/plus-ennakko/src/utils/layout.js",[],"/Users/saaantt/Desktop/projektit/plus-ennakko/src/Slides.js",["78"],"/Users/saaantt/Desktop/projektit/plus-ennakko/src/utils/dateMethods.js",["79"],"import { formatLocale } from \"d3-format\";\nimport { timeFormat, timeFormatLocale, timeParse } from \"d3-time-format\";\n\nvar locale = timeFormatLocale({\n  dateTime: \"%A, %-d. %Bta %Y klo %X\",\n  date: \"%-d.%-m.%Y\",\n  time: \"%H:%M:%S\",\n  periods: [\"a.m.\", \"p.m.\"],\n  days: [\n    \"sunnuntai\",\n    \"maanantai\",\n    \"tiistai\",\n    \"keskiviikko\",\n    \"torstai\",\n    \"perjantai\",\n    \"lauantai\",\n  ],\n  shortDays: [\"Su\", \"Ma\", \"Ti\", \"Ke\", \"To\", \"Pe\", \"La\"],\n  months: [\n    \"tammikuu\",\n    \"helmikuu\",\n    \"maaliskuu\",\n    \"huhtikuu\",\n    \"toukokuu\",\n    \"kesäkuu\",\n    \"heinäkuu\",\n    \"elokuu\",\n    \"syyskuu\",\n    \"lokakuu\",\n    \"marraskuu\",\n    \"joulukuu\",\n  ],\n  shortMonths: [\n    \"Tammi\",\n    \"Helmi\",\n    \"Maalis\",\n    \"Huhti\",\n    \"Touko\",\n    \"Kesä\",\n    \"Heinä\",\n    \"Elo\",\n    \"Syys\",\n    \"Loka\",\n    \"Marras\",\n    \"Joulu\",\n  ],\n});\n\nexport const parseDate = timeParse(\"%d.%m.%Y\"); // Date stored in data in form 1.5.2020\nexport const formatDate = locale.format(\"%B\");\nexport const formatDateBackToOriginal = locale.format(\"%-d.%-m.%Y\");\nexport const formatDateWeek = timeFormat(\"vko %V\");\n","/Users/saaantt/Desktop/projektit/plus-ennakko/src/components/Annotation.js",[],"/Users/saaantt/Desktop/projektit/plus-ennakko/src/components/Legend.js",[],"/Users/saaantt/Desktop/projektit/plus-ennakko/src/components/Circles.js",[],["80","81"],"/Users/saaantt/Desktop/projektit/plus-ennakko/src/components/Dataviz.js",[],"/Users/saaantt/Desktop/projektit/plus-ennakko/src/utils/categories.js",[],"/Users/saaantt/Desktop/projektit/plus-ennakko/src/utils/scales.js",["82","83"],"/Users/saaantt/Desktop/projektit/plus-ennakko/src/components/ScrollyTeller.js",[],"/Users/saaantt/Desktop/projektit/plus-ennakko/src/utils/initialize.js",[],"/Users/saaantt/Desktop/projektit/plus-ennakko/src/index.js",[],{"ruleId":"84","severity":1,"message":"85","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":18},{"ruleId":"84","severity":1,"message":"88","line":70,"column":9,"nodeType":"86","messageId":"87","endLine":70,"endColumn":28},{"ruleId":"89","severity":1,"message":"90","line":83,"column":23,"nodeType":"91","messageId":"92","endLine":83,"endColumn":25},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"84","severity":1,"message":"97","line":52,"column":11,"nodeType":"86","messageId":"87","endLine":52,"endColumn":21},{"ruleId":"89","severity":1,"message":"98","line":52,"column":39,"nodeType":"91","messageId":"99","endLine":52,"endColumn":41},{"ruleId":"84","severity":1,"message":"100","line":93,"column":13,"nodeType":"86","messageId":"87","endLine":93,"endColumn":25},{"ruleId":"84","severity":1,"message":"101","line":125,"column":11,"nodeType":"86","messageId":"87","endLine":125,"endColumn":15},{"ruleId":"84","severity":1,"message":"102","line":1,"column":10,"nodeType":"86","messageId":"87","endLine":1,"endColumn":22},{"ruleId":"93","replacedBy":"103"},{"ruleId":"95","replacedBy":"104"},{"ruleId":"84","severity":1,"message":"105","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":19},{"ruleId":"84","severity":1,"message":"106","line":11,"column":10,"nodeType":"86","messageId":"87","endLine":11,"endColumn":25},"no-unused-vars","'censusData' is defined but never used.","Identifier","unusedVar","'applyRollingAverage' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-native-reassign",["107"],"no-negated-in-lhs",["108"],"'comparison' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'uniqueGroups' is assigned a value but never used.","'date' is assigned a value but never used.","'formatLocale' is defined but never used.",["107"],["108"],"'timeMonth' is defined but never used.","'getNumberOfWeek' is defined but never used.","no-global-assign","no-unsafe-negation"]